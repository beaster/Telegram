buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'com.android.application'

dependencies {
    compile 'com.android.support:support-v4:21.0.+'
    compile 'com.google.android.gms:play-services:3.2.+'
    compile 'net.hockeyapp.android:HockeySDK:3.5.+'
    compile 'com.googlecode.mp4parser:isoparser:1.0.+'
    compile 'com.android.support:recyclerview-v7:+'
    compile fileTree(dir: 'libs', include: ['*.jar'], excludes: ['com.yotadevices.yotaphone2.sdk.v2.jar'])
    provided files('libs/com.yotadevices.yotaphone2.sdk.v2.jar')
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.yotadevices.yotaphone2.telegram.messenger"
        minSdkVersion 19
        targetSdkVersion 19

        project.archivesBaseName = "YD_Telegramm";
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file("../../../yapps_yotacommons/Build/titanium_yotadevices_keys/yotadevices.keystore")
            storePassword "yotadevices"
            keyPassword "yotadevices"
            keyAlias "yotadevices"
        }
        debug {
            storeFile file("config/debug.keystore")
        }
    }

    productFlavors {
        flavor1 {
            applicationId "org.telegram"
        }

        flavor2 {
            applicationId "com.yotadevices.yotaphone2.telegram"
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            //   cleanBuildType()
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries = false
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }
}

